{"version":3,"sources":["webpack:///./src/Phrasebook/index.vue","webpack:///./src/Phrasebook/PhraseCard.vue","webpack:///./src/Phrasebook/PhraseCard.vue?0f23","webpack:///./src/Phrasebook/PhraseCard.vue?dc76","webpack:///./src/Phrasebook/main.ts","webpack:///./src/Phrasebook/index.vue?dcc3","webpack:///./src/Phrasebook/index.vue?b05c","webpack:///./src/Phrasebook/PhraseCard.vue?9565","webpack:///./src/Phrasebook/index.vue?51f4","webpack:///./src/components/Notes/index.vue","webpack:///./src/components/Notes/index.vue?4c77","webpack:///./src/components/Notes/index.vue?7695"],"names":["class","corpus","searching","icon","query","type","placeholder","section","style","select","s","key","id","value","name","phrases","ps","p","text","is-on","phrase","phrasebooks","n","lect","copy","glossed","translation","contextTranslation","blocks","b","i","ref","el","push","block","notes","components","Context","Block","Notes","props","String","default","Object","undefined","setup","context","filter","state","map","join","navigator","clipboard","writeText","render","__scopeId","initialize","PhraseCard","immediate","reduce","result","index","includes","length","_section","_phrase","pieces","j","display","Array","isWrapped","start","end","toPiece","patterns","slice","separator","split"],"mappings":"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","file":"js/chunk-2da8463a.6231567b.js","sourcesContent":["<template>\n  <div v-if=\"corpus\" class=\"section col-1\">\n    <div class=\"col-1\">\n      <div class=\"row-1\">\n        <toggle v-model=\"searching\" icon=\"search\" />\n        <input\n          v-if=\"searching\"\n          v-model=\"query\"\n          class=\"flex\"\n          type=\"text\"\n          placeholder=\"Search all phrases...\"\n        />\n        <h2 v-else class=\"col-1 flex\">\n          <select\n            v-model=\"section\"\n            style=\"flex: none\"\n            @change=\"select(section)\"\n          >\n            <option v-for=\"s in corpus\" :key=\"s.id\" :value=\"s\">\n              {{ s.name }}\n            </option>\n          </select>\n        </h2>\n      </div>\n      <div class=\"scroll\">\n        <div v-if=\"searching\" class=\"col\">\n          <div v-for=\"(ps, s) of phrases\" :key=\"s\" class=\"col\">\n            <h2>{{ corpus[s].name }}</h2>\n            <div class=\"col-0\">\n              <btn\n                v-for=\"p in ps\"\n                :key=\"p\"\n                :text=\"corpus[s].phrases[p].name\"\n                :is-on=\"phrase === corpus[s].phrases[p]\"\n                @click=\"select(corpus[s], corpus[s].phrases[p])\"\n              />\n            </div>\n          </div>\n        </div>\n        <div v-else class=\"col-0\">\n          <btn\n            v-for=\"p in phrases\"\n            :key=\"p.id\"\n            :text=\"p.name\"\n            :is-on=\"phrase === p\"\n            @click=\"select(null, p)\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"phrase\" :key=\"phrase.id\" class=\"col-1\">\n      <PhraseCard :phrase=\"phrase\" />\n      <PhraseCard\n        v-for=\"(p, n) of phrasebooks\"\n        :key=\"n\"\n        :lect=\"n\"\n        :phrase=\"p[phrase.id]\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport PhraseCard from \"./PhraseCard.vue\";\n\nimport { computed, ref, watch, defineComponent, provide, nextTick } from \"vue\";\n\nimport { corpus, section, phrase, phrasebooks, initialize } from \"./main\";\nimport { Context, CorpusPhrase, CorpusSection } from \"./types\";\nimport { createContext } from \"./utils\";\n\nexport default defineComponent({\n  components: { PhraseCard },\n  setup() {\n    initialize();\n\n    const context = ref({} as Context);\n    watch(phrase, (phrase) => createContext(context, phrase.context), {\n      immediate: true,\n    });\n\n    provide(\"context\", context);\n\n    const searching = ref(false);\n    const query = ref(\"\");\n\n    const phrases = computed(() =>\n      searching.value\n        ? corpus.value.reduce((result, section, index) => {\n            result[index] = section.phrases\n              .map((phrase, index) => [phrase, index] as [CorpusPhrase, number])\n              .filter(([phrase]) => phrase.name.includes(query.value))\n              .map(([, index]) => index);\n            if (!result[index].length) delete result[index];\n            return result;\n          }, {} as Record<number, number[]>)\n        : section.value?.phrases\n    );\n    function select(_section?: CorpusSection, _phrase?: CorpusPhrase) {\n      if (_section) section.value = _section;\n      phrase.value = _phrase ?? section.value.phrases[0];\n    }\n\n    return {\n      searching,\n      query,\n      corpus,\n      section,\n      phrase,\n      select,\n      phrases,\n      phrasebooks,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.section {\n  display: grid;\n  grid-template-columns: 288px minmax(0, 1fr);\n  gap: map-get($margins, \"double\");\n  > :first-child {\n    max-height: 640px;\n  }\n}\n@media only screen and (max-width: $mobile-width) {\n  .section {\n    > :first-child {\n      max-height: 320px;\n    }\n    grid-template-columns: 100%;\n  }\n}\n</style>\n","<template>\n  <div v-if=\"phrase\" class=\"col-1 card\">\n    <div class=\"row-1 small wrap\" style=\"width: 100%\">\n      <template v-if=\"lect\">\n        <btn icon=\"content_copy\" @click=\"copy\" />\n        <toggle v-model=\"glossed\" icon=\"layers\" />\n        <h2 class=\"flex\">{{ lect }}</h2>\n      </template>\n      <Context :translation=\"contextTranslation\" :blocks=\"blocks\" />\n    </div>\n    <div class=\"row wrap flex\">\n      <Block\n        v-for=\"(b, i) in phrase.blocks\"\n        :ref=\"(el) => blocks.push(el)\"\n        :key=\"i\"\n        :glossed=\"glossed\"\n        :block=\"b\"\n      />\n    </div>\n    <Notes class=\"text-caption\" :notes=\"phrase.notes\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Context from \"./Context/index.vue\";\nimport Block from \"./Block/index.vue\";\nimport Notes from \"@/components/Notes/index.vue\";\n\nimport { computed, defineComponent, PropType, reactive, ref } from \"vue\";\n\nimport { Phrase, BlockVue } from \"./types\";\n\nexport default defineComponent({\n  components: { Context, Block, Notes },\n  props: {\n    lect: { type: String, default: \"\" },\n    phrase: { type: Object as PropType<Phrase>, default: undefined },\n  },\n  setup(props) {\n    const glossed = ref(false);\n    const contextTranslation = computed(() =>\n      props.lect ? props.phrase.context : undefined\n    );\n\n    const blocks = reactive([] as BlockVue[]);\n    const text = computed(() =>\n      blocks\n        .filter(({ state }) => state)\n        .map(({ text }) => text)\n        .join(\" \")\n    );\n    function copy() {\n      navigator.clipboard.writeText(text.value);\n    }\n\n    return { glossed, blocks, copy, contextTranslation };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.card {\n  align-items: flex-start;\n}\n</style>\n","\nimport Context from \"./Context/index.vue\";\nimport Block from \"./Block/index.vue\";\nimport Notes from \"@/components/Notes/index.vue\";\n\nimport { computed, defineComponent, PropType, reactive, ref } from \"vue\";\n\nimport { Phrase, BlockVue } from \"./types\";\n\nexport default defineComponent({\n  components: { Context, Block, Notes },\n  props: {\n    lect: { type: String, default: \"\" },\n    phrase: { type: Object as PropType<Phrase>, default: undefined },\n  },\n  setup(props) {\n    const glossed = ref(false);\n    const contextTranslation = computed(() =>\n      props.lect ? props.phrase.context : undefined\n    );\n\n    const blocks = reactive([] as BlockVue[]);\n    const text = computed(() =>\n      blocks\n        .filter(({ state }) => state)\n        .map(({ text }) => text)\n        .join(\" \")\n    );\n    function copy() {\n      navigator.clipboard.writeText(text.value);\n    }\n\n    return { glossed, blocks, copy, contextTranslation };\n  },\n});\n","import { render } from \"./PhraseCard.vue?vue&type=template&id=76748aac&scoped=true\"\nimport script from \"./PhraseCard.vue?vue&type=script&lang=ts\"\nexport * from \"./PhraseCard.vue?vue&type=script&lang=ts\"\n\nimport \"./PhraseCard.vue?vue&type=style&index=0&id=76748aac&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-76748aac\"\n\nexport default script","import { getInitializer, loadJSON, loadLectsJSON } from \"@/store\";\nimport { shallowRef } from \"vue\";\nimport { CorpusPhrase, CorpusSection, Phrasebook } from \"./types\";\n\nexport const corpus = shallowRef<CorpusSection[]>([]);\nexport const phrasebooks = shallowRef<Record<string, Phrasebook>>();\nexport const section = shallowRef({} as CorpusSection);\nexport const phrase = shallowRef({} as CorpusPhrase);\n\nexport const initialize = getInitializer(async () => {\n  corpus.value = await loadJSON(\"phrasebook\");\n  phrasebooks.value = await loadLectsJSON<Phrasebook>(\"phrasebook\");\n\n  section.value = corpus.value[0];\n  phrase.value = section.value.phrases[0];\n});\n","\nimport PhraseCard from \"./PhraseCard.vue\";\n\nimport { computed, ref, watch, defineComponent, provide, nextTick } from \"vue\";\n\nimport { corpus, section, phrase, phrasebooks, initialize } from \"./main\";\nimport { Context, CorpusPhrase, CorpusSection } from \"./types\";\nimport { createContext } from \"./utils\";\n\nexport default defineComponent({\n  components: { PhraseCard },\n  setup() {\n    initialize();\n\n    const context = ref({} as Context);\n    watch(phrase, (phrase) => createContext(context, phrase.context), {\n      immediate: true,\n    });\n\n    provide(\"context\", context);\n\n    const searching = ref(false);\n    const query = ref(\"\");\n\n    const phrases = computed(() =>\n      searching.value\n        ? corpus.value.reduce((result, section, index) => {\n            result[index] = section.phrases\n              .map((phrase, index) => [phrase, index] as [CorpusPhrase, number])\n              .filter(([phrase]) => phrase.name.includes(query.value))\n              .map(([, index]) => index);\n            if (!result[index].length) delete result[index];\n            return result;\n          }, {} as Record<number, number[]>)\n        : section.value?.phrases\n    );\n    function select(_section?: CorpusSection, _phrase?: CorpusPhrase) {\n      if (_section) section.value = _section;\n      phrase.value = _phrase ?? section.value.phrases[0];\n    }\n\n    return {\n      searching,\n      query,\n      corpus,\n      section,\n      phrase,\n      select,\n      phrases,\n      phrasebooks,\n    };\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=63242300&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=63242300&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-63242300\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PhraseCard.vue?vue&type=style&index=0&id=76748aac&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=63242300&lang=scss&scoped=true\"","<template>\n  <div v-if=\"notes.length\" class=\"col\">\n    <p v-for=\"(ps, i) in pieces\" :key=\"i\">\n      <template v-for=\"({ text, display }, j) in ps\" :key=\"j\">\n        <span v-if=\"display === 'plain'\">{{ text }}</span>\n        <span v-else-if=\"display === 'highlight'\" class=\"highlight-font\">{{\n          text\n        }}</span>\n        <b v-else-if=\"display === 'grapheme'\">{{ text }}</b>\n        <span v-else class=\"text-ipa\">{{ text }}</span>\n      </template>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, PropType, defineComponent } from \"vue\";\nimport { PieceDisplay, Piece } from \"./types\";\n\nexport default defineComponent({\n  props: {\n    notes: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  setup(props) {\n    function isWrapped(text: string, start: string, end: string) {\n      return text[0] === start && text[text.length - 1] === end;\n    }\n    function toPiece(text: string): Piece {\n      const patterns = [\n        [\"*\", \"*\", \"highlight\"],\n        [\"/\", \"/\", \"phoneme\"],\n        [\"<\", \">\", \"grapheme\"],\n      ] as [string, string, PieceDisplay][];\n\n      for (const [start, end, display] of patterns) {\n        if (isWrapped(text, start, end))\n          return { text: text.slice(1, -1), display };\n      }\n      return { text, display: \"plain\" };\n    }\n    const pieces = computed(() => {\n      const separator = /(\\/[^/]+\\/|<[^<>]+>|\\*[^*]+\\*)/g;\n      return props.notes.map((n) => n.split(separator).map((n) => toPiece(n)));\n    });\n    return { pieces };\n  },\n});\n</script>\n","\nimport { computed, PropType, defineComponent } from \"vue\";\nimport { PieceDisplay, Piece } from \"./types\";\n\nexport default defineComponent({\n  props: {\n    notes: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  setup(props) {\n    function isWrapped(text: string, start: string, end: string) {\n      return text[0] === start && text[text.length - 1] === end;\n    }\n    function toPiece(text: string): Piece {\n      const patterns = [\n        [\"*\", \"*\", \"highlight\"],\n        [\"/\", \"/\", \"phoneme\"],\n        [\"<\", \">\", \"grapheme\"],\n      ] as [string, string, PieceDisplay][];\n\n      for (const [start, end, display] of patterns) {\n        if (isWrapped(text, start, end))\n          return { text: text.slice(1, -1), display };\n      }\n      return { text, display: \"plain\" };\n    }\n    const pieces = computed(() => {\n      const separator = /(\\/[^/]+\\/|<[^<>]+>|\\*[^*]+\\*)/g;\n      return props.notes.map((n) => n.split(separator).map((n) => toPiece(n)));\n    });\n    return { pieces };\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=3ab02e56\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}