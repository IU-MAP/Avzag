{"version":3,"sources":["webpack:///./src/components/ConfirmButton.vue","webpack:///./src/components/ConfirmButton.vue?2177","webpack:///./src/components/ConfirmButton.vue?2c30","webpack:///./src/Phrasebook/Block/OrderEditor.vue","webpack:///./src/Phrasebook/Block/OrderEditor.vue?bf7d","webpack:///./src/Phrasebook/Block/OrderEditor.vue?81c1","webpack:///./node_modules/core-js/modules/es.array.flat-map.js","webpack:///./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:///./src/components/EditorCard.vue","webpack:///./src/components/EditorCard.vue?73a3","webpack:///./src/components/EditorCard.vue?01ae","webpack:///./src/Phrasebook/Block/Editor.vue","webpack:///./src/Phrasebook/State/ConditionsEditor.vue","webpack:///./src/Phrasebook/State/ConditionsEditor.vue?3a5e","webpack:///./src/Phrasebook/State/ConditionsEditor.vue?407c","webpack:///./src/Phrasebook/State/TransitionEditor.vue","webpack:///./src/Phrasebook/State/TransitionEditor.vue?270b","webpack:///./src/Phrasebook/State/TransitionEditor.vue?2939","webpack:///./src/Phrasebook/State/TextsEditor.vue","webpack:///./src/Phrasebook/State/TextsEditor.vue?36cc","webpack:///./src/Phrasebook/State/TextsEditor.vue?b653","webpack:///./src/Phrasebook/Block/Editor.vue?a3d1","webpack:///./src/Phrasebook/Block/Editor.vue?7956","webpack:///./src/editor.ts","webpack:///./node_modules/core-js/internals/flatten-into-array.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./src/components/ArrayControl.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/components/ArrayControl.vue?c40b","webpack:///./src/components/ArrayControl.vue?e28d","webpack:///./src/components/EditorCard.vue?7459","webpack:///./src/Phrasebook/State/ConditionsEditor.vue?5f33"],"names":["class","icon","text","confirm","props","message","type","String","default","emits","setup","emit","window","render","mphrase","header","blocks","item","block","add","newState","copy","shift","remove","translation","phrase","id","context","b","i","key","Math","random","is-on","name","components","ArrayControl","EditorCard","Context","Block","modelValue","Array","undefined","Object","get","set","p","value","bs","$","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","target","proto","flatMap","callbackfn","A","O","this","sourceLen","length","arguments","addToUnscopables","caption","button","_","slots","__scopeId","glossed","state","s","texts","conditions","transition","states","tags","entity","tag","color","flag","toggle","c","index","keys","map","immediate","deep","mode","includes","VState","t","m","stateIndex","isArray","indexOf","push","splice","colors","plain","placeholder","ipa","gloss","entities","e","ConditionsEditor","TransitionEditor","TextsEditor","config","defaultFile","storage","filename","file","resetFile","JSON","parse","stringify","saveFile","localStorage","setupEditor","options","assign","bind","original","source","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","TypeError","module","exports","toAbsoluteIndex","toInteger","createProperty","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","ACCESSORS","0","1","max","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","forced","deleteCount","insertCount","actualDeleteCount","k","from","to","len","actualStart","argumentsLength","action","array","_typeof","obj","Symbol","iterator","constructor","prototype","ConfirmButton","Number","Function","Boolean","last"],"mappings":"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","file":"js/chunk-1838867f.df95f9a3.js","sourcesContent":["<template>\n  <btn\n    class=\"highlight-font-alert\"\n    :icon=\"icon\"\n    :text=\"text\"\n    @click=\"confirm\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    message: { type: String, default: \"Delete?\" },\n    icon: { type: String, default: \"delete\" },\n    text: { type: String, default: \"\" },\n  },\n  emits: [\"confirm\"],\n  setup(props, { emit }) {\n    function confirm() {\n      if (window.confirm(props.message)) emit(\"confirm\");\n    }\n    return { confirm };\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    message: { type: String, default: \"Delete?\" },\n    icon: { type: String, default: \"delete\" },\n    text: { type: String, default: \"\" },\n  },\n  emits: [\"confirm\"],\n  setup(props, { emit }) {\n    function confirm() {\n      if (window.confirm(props.message)) emit(\"confirm\");\n    }\n    return { confirm };\n  },\n});\n","import { render } from \"./ConfirmButton.vue?vue&type=template&id=598fbbc7\"\nimport script from \"./ConfirmButton.vue?vue&type=script&lang=ts\"\nexport * from \"./ConfirmButton.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <EditorCard v-if=\"mphrase\" icon=\"widgets\" header=\"Blocks\">\n    <template #header>\n      <ArrayControl\n        v-model=\"blocks\"\n        v-model:item=\"block\"\n        :add=\"() => [newState()]\"\n        copy\n        shift\n        remove\n      />\n    </template>\n    <Context :translation=\"phrase.id ? null : phrase.context\" />\n    <div class=\"row-1 wrap block-editor\">\n      <div v-for=\"(b, i) in blocks\" :key=\"i + '--' + Math.random()\" class=\"row\">\n        <btn icon=\"edit\" :is-on=\"block === b\" @click=\"block = b\" />\n        <Block :block=\"b\" />\n      </div>\n    </div>\n  </EditorCard>\n</template>\n\n<script lang=\"ts\">\nimport ArrayControl from \"@/components/ArrayControl.vue\";\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport Context from \"../Context/index.vue\";\nimport Block from \"./index.vue\";\n\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { Phrase, CorpusPhrase, State } from \"../types\";\nimport { newState } from \"../utils\";\n\nexport default defineComponent({\n  name: \"OrderEditor\",\n  components: { ArrayControl, EditorCard, Context, Block },\n  props: {\n    modelValue: {\n      type: Array as PropType<State[] | undefined>,\n      default: undefined,\n    },\n    phrase: {\n      type: Object as PropType<Phrase | CorpusPhrase>,\n      default: undefined,\n    },\n  },\n  emits: [\"update:modelValue\", \"update:phrase\"],\n  setup(props, { emit }) {\n    const block = computed({\n      get: () => props.modelValue,\n      set: (b) => emit(\"update:modelValue\", b),\n    });\n    const mphrase = computed({\n      get: () => props.phrase,\n      set: (p) => emit(\"update:modelValue\", p),\n    });\n    const blocks = computed({\n      get: () => mphrase.value.blocks,\n      set: (bs) => (mphrase.value.blocks = bs),\n    });\n\n    return { mphrase, blocks, block, newState };\n  },\n});\n</script>\n","\nimport ArrayControl from \"@/components/ArrayControl.vue\";\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport Context from \"../Context/index.vue\";\nimport Block from \"./index.vue\";\n\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { Phrase, CorpusPhrase, State } from \"../types\";\nimport { newState } from \"../utils\";\n\nexport default defineComponent({\n  name: \"OrderEditor\",\n  components: { ArrayControl, EditorCard, Context, Block },\n  props: {\n    modelValue: {\n      type: Array as PropType<State[] | undefined>,\n      default: undefined,\n    },\n    phrase: {\n      type: Object as PropType<Phrase | CorpusPhrase>,\n      default: undefined,\n    },\n  },\n  emits: [\"update:modelValue\", \"update:phrase\"],\n  setup(props, { emit }) {\n    const block = computed({\n      get: () => props.modelValue,\n      set: (b) => emit(\"update:modelValue\", b),\n    });\n    const mphrase = computed({\n      get: () => props.phrase,\n      set: (p) => emit(\"update:modelValue\", p),\n    });\n    const blocks = computed({\n      get: () => mphrase.value.blocks,\n      set: (bs) => (mphrase.value.blocks = bs),\n    });\n\n    return { mphrase, blocks, block, newState };\n  },\n});\n","import { render } from \"./OrderEditor.vue?vue&type=template&id=9dbb575c\"\nimport script from \"./OrderEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./OrderEditor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","<template>\n  <div class=\"col\">\n    <div class=\"row\">\n      <p class=\"icon\">{{ icon }}</p>\n      <h2 class=\"flex\">{{ header }}</h2>\n      <slot name=\"header\" />\n    </div>\n    <hr />\n    <p v-if=\"caption\" class=\"text-caption text-faded\">\n      <slot name=\"caption\" />\n    </p>\n    <div class=\"col\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"EditorCard\",\n  props: {\n    button: { type: String, default: \"add\" },\n    icon: { type: String, default: \"\" },\n    header: { type: String, default: \"\" },\n  },\n  emits: [\"action\"],\n  setup(_, { emit, slots }) {\n    return { emit, caption: slots.caption };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.text-caption:empty {\n  display: none;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"EditorCard\",\n  props: {\n    button: { type: String, default: \"add\" },\n    icon: { type: String, default: \"\" },\n    header: { type: String, default: \"\" },\n  },\n  emits: [\"action\"],\n  setup(_, { emit, slots }) {\n    return { emit, caption: slots.caption };\n  },\n});\n","import { render } from \"./EditorCard.vue?vue&type=template&id=03976a61&scoped=true\"\nimport script from \"./EditorCard.vue?vue&type=script&lang=ts\"\nexport * from \"./EditorCard.vue?vue&type=script&lang=ts\"\n\nimport \"./EditorCard.vue?vue&type=style&index=0&id=03976a61&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-03976a61\"\n\nexport default script","<template>\n  <div v-if=\"block\" class=\"block col-2\">\n    <EditorCard icon=\"account_tree\" header=\"States\">\n      <template #header>\n        <toggle v-model=\"glossed\" icon=\"layers\" />\n        <ArrayControl\n          v-model=\"block\"\n          v-model:item=\"state\"\n          :add=\"newState\"\n          copy\n          shift\n          remove\n        />\n      </template>\n      <div class=\"row-1 wrap block-editor\">\n        <button\n          v-for=\"(s, i) in block\"\n          :key=\"i\"\n          class=\"row fit-h\"\n          @click=\"state = s\"\n        >\n          <p v-if=\"state === s\" class=\"icon highlight-font\">edit</p>\n          <VState :state=\"s\" :glossed=\"glossed\" />\n        </button>\n      </div>\n    </EditorCard>\n    <template v-if=\"state\">\n      <TextsEditor v-model=\"state.texts\" />\n      <ConditionsEditor v-model=\"state.conditions\" />\n      <TransitionEditor v-model=\"state.transition\" :states=\"block\" />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport ArrayControl from \"@/components/ArrayControl.vue\";\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport ConditionsEditor from \"../State/ConditionsEditor.vue\";\nimport TransitionEditor from \"../State/TransitionEditor.vue\";\nimport TextsEditor from \"../State/TextsEditor.vue\";\nimport VState from \"../State/index.vue\";\n\nimport { defineComponent, PropType, computed, ref } from \"vue\";\nimport { State } from \"../types\";\nimport { newState } from \"../utils\";\n\nexport default defineComponent({\n  name: \"BlockEditor\",\n  components: {\n    ArrayControl,\n    EditorCard,\n    ConditionsEditor,\n    TransitionEditor,\n    VState,\n    TextsEditor,\n  },\n  props: {\n    modelValue: { type: Array as PropType<State[]>, default: undefined },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const block = computed({\n      get: () => props.modelValue,\n      set: (b) => emit(\"update:modelValue\", b),\n    });\n    const state = ref(undefined as undefined | State);\n    const glossed = ref(false);\n\n    return { newState, glossed, state, block };\n  },\n});\n</script>\n","<template>\n  <EditorCard icon=\"tune\" header=\"conditions\">\n    <template v-if=\"conditions\" #header>\n      <btn icon=\"clear\" @click=\"conditions = {}\" />\n    </template>\n    <template #caption>TODO brief explanation</template>\n    <div class=\"row wrap\">\n      <button\n        v-for=\"({ entity, tag, color, icon, flag }, i) in tags\"\n        :key=\"entity + '--' + tag\"\n        @click=\"toggle(i)\"\n      >\n        <p v-if=\"flag !== undefined\" class=\"icon\" :class=\"'colored-' + color\">\n          {{ icon }}\n        </p>\n        <p :class=\"'colored-dot-' + color\">{{ tag }}</p>\n      </button>\n    </div>\n  </EditorCard>\n</template>\n\n<script lang=\"ts\">\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport {\n  computed,\n  defineComponent,\n  PropType,\n  inject,\n  ComputedRef,\n  ref,\n  watch,\n} from \"vue\";\nimport { ContextSource, Conditions } from \"../types\";\n\nexport default defineComponent({\n  name: \"ConditionsEditor\",\n  components: { EditorCard },\n  props: {\n    modelValue: { type: Object as PropType<Conditions>, default: undefined },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const context = inject(\n      \"contextSource\",\n      {} as ComputedRef<undefined | ContextSource[]>\n    );\n    const conditions = computed({\n      get: () => props.modelValue,\n      set: (c) => emit(\"update:modelValue\", c),\n    });\n    const tags = ref(\n      [] as {\n        tag: string;\n        entity: string;\n        icon: string;\n        color: number;\n        flag?: boolean;\n      }[]\n    );\n    watch(\n      [context, conditions],\n      ([context, conditions]) => {\n        if (!context || !conditions) return;\n        tags.value = context.flatMap(({ entity, tags }, i) =>\n          tags.map((tag) => {\n            const flag = conditions[entity]?.[tag];\n            const icon =\n              flag === undefined ? \"arrow_right\" : flag ? \"send\" : \"lock\";\n\n            return {\n              tag,\n              entity,\n              icon,\n              color: i,\n              flag: flag,\n            };\n          })\n        );\n      },\n      { immediate: true, deep: true }\n    );\n    function toggle(index: number) {\n      if (!tags.value) return;\n      const { flag, entity, tag } = tags.value[index];\n      if (flag === undefined) {\n        if (!conditions.value[entity]) conditions.value[entity] = {};\n        conditions.value[entity][tag] = true;\n      } else if (flag) conditions.value[entity][tag] = false;\n      else {\n        delete conditions.value[entity][tag];\n        if (!Object.keys(conditions.value[entity]).length)\n          delete conditions.value[entity];\n      }\n    }\n\n    return { context, conditions, tags, toggle };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll {\n  max-height: 128px;\n}\n</style>\n","\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport {\n  computed,\n  defineComponent,\n  PropType,\n  inject,\n  ComputedRef,\n  ref,\n  watch,\n} from \"vue\";\nimport { ContextSource, Conditions } from \"../types\";\n\nexport default defineComponent({\n  name: \"ConditionsEditor\",\n  components: { EditorCard },\n  props: {\n    modelValue: { type: Object as PropType<Conditions>, default: undefined },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const context = inject(\n      \"contextSource\",\n      {} as ComputedRef<undefined | ContextSource[]>\n    );\n    const conditions = computed({\n      get: () => props.modelValue,\n      set: (c) => emit(\"update:modelValue\", c),\n    });\n    const tags = ref(\n      [] as {\n        tag: string;\n        entity: string;\n        icon: string;\n        color: number;\n        flag?: boolean;\n      }[]\n    );\n    watch(\n      [context, conditions],\n      ([context, conditions]) => {\n        if (!context || !conditions) return;\n        tags.value = context.flatMap(({ entity, tags }, i) =>\n          tags.map((tag) => {\n            const flag = conditions[entity]?.[tag];\n            const icon =\n              flag === undefined ? \"arrow_right\" : flag ? \"send\" : \"lock\";\n\n            return {\n              tag,\n              entity,\n              icon,\n              color: i,\n              flag: flag,\n            };\n          })\n        );\n      },\n      { immediate: true, deep: true }\n    );\n    function toggle(index: number) {\n      if (!tags.value) return;\n      const { flag, entity, tag } = tags.value[index];\n      if (flag === undefined) {\n        if (!conditions.value[entity]) conditions.value[entity] = {};\n        conditions.value[entity][tag] = true;\n      } else if (flag) conditions.value[entity][tag] = false;\n      else {\n        delete conditions.value[entity][tag];\n        if (!Object.keys(conditions.value[entity]).length)\n          delete conditions.value[entity];\n      }\n    }\n\n    return { context, conditions, tags, toggle };\n  },\n});\n","import { render } from \"./ConditionsEditor.vue?vue&type=template&id=6cb03aac&scoped=true\"\nimport script from \"./ConditionsEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./ConditionsEditor.vue?vue&type=script&lang=ts\"\n\nimport \"./ConditionsEditor.vue?vue&type=style&index=0&id=6cb03aac&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-6cb03aac\"\n\nexport default script","<template>\n  <EditorCard icon=\"alt_route\" header=\"transition\">\n    <template #header>\n      <div class=\"row\">\n        <btn icon=\"block\" :is-on=\"mode === 0\" @click=\"mode = 0\" />\n        <btn icon=\"arrow_forward\" :is-on=\"mode === 1\" @click=\"mode = 1\" />\n        <btn icon=\"star_outline\" :is-on=\"mode === 2\" @click=\"mode = 2\" />\n      </div>\n    </template>\n    <div v-if=\"mode === 2\" class=\"row wrap\">\n      <button v-for=\"(s, i) in states\" :key=\"i\" class=\"row\" @click=\"toggle(i)\">\n        <!-- <p v-if=\"transition.includes(i)\" class=\"icon\">arrow_right</p> -->\n        <p v-if=\"transition.includes(i)\" class=\"icon highlight-font\">\n          star_outline\n        </p>\n        <VState :state=\"s\" />\n      </button>\n    </div>\n  </EditorCard>\n</template>\n\n<script lang=\"ts\">\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport VState from \"./index.vue\";\n\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { Transition, State } from \"../types\";\n\nexport default defineComponent({\n  name: \"TransitionEditor\",\n  components: { EditorCard, VState },\n  props: {\n    modelValue: {\n      type: [Array, String],\n      default: undefined,\n    },\n    states: { type: Array as PropType<State[]>, default: () => [] },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const transition = computed({\n      get: () => props.modelValue as Transition,\n      set: (t) => emit(\"update:modelValue\", t),\n    });\n    const mode = computed({\n      get: () => (transition.value ? (transition.value === \"next\" ? 1 : 2) : 0),\n      set: (m) => (transition.value = m ? (m === 1 ? \"next\" : []) : undefined),\n    });\n\n    function toggle(stateIndex: number) {\n      if (!Array.isArray(transition.value)) return;\n      const index = transition.value.indexOf(stateIndex);\n      if (index < 0) transition.value.push(stateIndex);\n      else transition.value.splice(index, 1);\n    }\n    return { transition, mode, toggle };\n  },\n});\n</script>\n","\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport VState from \"./index.vue\";\n\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { Transition, State } from \"../types\";\n\nexport default defineComponent({\n  name: \"TransitionEditor\",\n  components: { EditorCard, VState },\n  props: {\n    modelValue: {\n      type: [Array, String],\n      default: undefined,\n    },\n    states: { type: Array as PropType<State[]>, default: () => [] },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const transition = computed({\n      get: () => props.modelValue as Transition,\n      set: (t) => emit(\"update:modelValue\", t),\n    });\n    const mode = computed({\n      get: () => (transition.value ? (transition.value === \"next\" ? 1 : 2) : 0),\n      set: (m) => (transition.value = m ? (m === 1 ? \"next\" : []) : undefined),\n    });\n\n    function toggle(stateIndex: number) {\n      if (!Array.isArray(transition.value)) return;\n      const index = transition.value.indexOf(stateIndex);\n      if (index < 0) transition.value.push(stateIndex);\n      else transition.value.splice(index, 1);\n    }\n    return { transition, mode, toggle };\n  },\n});\n","import { render } from \"./TransitionEditor.vue?vue&type=template&id=79f4ba1c\"\nimport script from \"./TransitionEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./TransitionEditor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <EditorCard icon=\"format_color_text\" header=\"texts\">\n    <template #header>\n      <ArrayControl v-model=\"texts\" :add=\"{}\" />\n    </template>\n    <div class=\"col\">\n      <div v-for=\"(t, i) in texts\" :key=\"i\" class=\"row\">\n        <btn icon=\"palette\" @click=\"toggle(i)\" />\n        <div class=\"row\" :class=\"colors[i]\">\n          <input v-model=\"t.plain\" type=\"text\" placeholder=\"plain\" />\n          <input\n            v-model=\"t.ipa\"\n            class=\"text-ipa\"\n            type=\"text\"\n            placeholder=\"ipa\"\n          />\n          <input v-model=\"t.gloss\" type=\"text\" placeholder=\"gloss\" />\n        </div>\n        <btn icon=\"clear\" @click=\"texts.splice(i, 1)\" />\n      </div>\n    </div>\n  </EditorCard>\n</template>\n\n<script lang=\"ts\">\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport ArrayControl from \"@/components/ArrayControl.vue\";\n\nimport { computed, defineComponent, PropType, inject, Ref } from \"vue\";\nimport { Text, Context } from \"../types\";\n\nexport default defineComponent({\n  name: \"TextsEditor\",\n  components: { EditorCard, ArrayControl },\n  props: {\n    modelValue: { type: Array as PropType<Text[]>, default: undefined },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const context = inject(\"context\", {} as Ref<Context>);\n    const entities = computed(() => Object.keys(context.value));\n\n    const texts = computed({\n      get: () => props.modelValue,\n      set: (t) => emit(\"update:modelValue\", t),\n    });\n    const colors = computed(() =>\n      texts.value\n        ?.map(({ entity }) => entities.value.indexOf(entity ?? \"\"))\n        .map((i) => \"colored-\" + i)\n    );\n\n    function toggle(i: number) {\n      const text = texts.value[i];\n      const e = entities.value.indexOf(text.entity ?? \"\");\n      text.entity = entities.value[e + 1];\n    }\n\n    return { texts, colors, toggle };\n  },\n});\n</script>\n","\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport ArrayControl from \"@/components/ArrayControl.vue\";\n\nimport { computed, defineComponent, PropType, inject, Ref } from \"vue\";\nimport { Text, Context } from \"../types\";\n\nexport default defineComponent({\n  name: \"TextsEditor\",\n  components: { EditorCard, ArrayControl },\n  props: {\n    modelValue: { type: Array as PropType<Text[]>, default: undefined },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const context = inject(\"context\", {} as Ref<Context>);\n    const entities = computed(() => Object.keys(context.value));\n\n    const texts = computed({\n      get: () => props.modelValue,\n      set: (t) => emit(\"update:modelValue\", t),\n    });\n    const colors = computed(() =>\n      texts.value\n        ?.map(({ entity }) => entities.value.indexOf(entity ?? \"\"))\n        .map((i) => \"colored-\" + i)\n    );\n\n    function toggle(i: number) {\n      const text = texts.value[i];\n      const e = entities.value.indexOf(text.entity ?? \"\");\n      text.entity = entities.value[e + 1];\n    }\n\n    return { texts, colors, toggle };\n  },\n});\n","import { render } from \"./TextsEditor.vue?vue&type=template&id=7d89bb4c\"\nimport script from \"./TextsEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./TextsEditor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport ArrayControl from \"@/components/ArrayControl.vue\";\nimport EditorCard from \"@/components/EditorCard.vue\";\nimport ConditionsEditor from \"../State/ConditionsEditor.vue\";\nimport TransitionEditor from \"../State/TransitionEditor.vue\";\nimport TextsEditor from \"../State/TextsEditor.vue\";\nimport VState from \"../State/index.vue\";\n\nimport { defineComponent, PropType, computed, ref } from \"vue\";\nimport { State } from \"../types\";\nimport { newState } from \"../utils\";\n\nexport default defineComponent({\n  name: \"BlockEditor\",\n  components: {\n    ArrayControl,\n    EditorCard,\n    ConditionsEditor,\n    TransitionEditor,\n    VState,\n    TextsEditor,\n  },\n  props: {\n    modelValue: { type: Array as PropType<State[]>, default: undefined },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const block = computed({\n      get: () => props.modelValue,\n      set: (b) => emit(\"update:modelValue\", b),\n    });\n    const state = ref(undefined as undefined | State);\n    const glossed = ref(false);\n\n    return { newState, glossed, state, block };\n  },\n});\n","import { render } from \"./Editor.vue?vue&type=template&id=3e63fdc8\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { watch, ref, Ref } from \"vue\";\n\ntype Options = {\n  defaultFile: unknown;\n  storage: string;\n  filename: string | (() => string);\n};\n\nexport const config: Options = {\n  defaultFile: {},\n  storage: \"\",\n  filename: \"\",\n};\n\nexport const file = ref();\n\nexport function resetFile() {\n  file.value = JSON.parse(JSON.stringify(config.defaultFile));\n}\n\nexport function saveFile() {\n  localStorage[config.storage] = JSON.stringify(file.value);\n}\n\nexport function setupEditor<T>(options: Partial<Options>) {\n  Object.assign(config, options);\n  try {\n    file.value = JSON.parse(localStorage[config.storage]);\n  } catch {\n    resetFile();\n  }\n  watch(file, saveFile, { deep: true });\n\n  return file as Ref<T>;\n}\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","<template>\n  <div class=\"row\">\n    <btn v-if=\"add !== undefined\" icon=\"add\" @click=\"action.add\" />\n    <template v-if=\"array && item\">\n      <btn v-if=\"copy\" icon=\"queue\" @click=\"action.copy\" />\n      <div v-if=\"shift\" class=\"row-0\">\n        <btn icon=\"keyboard_arrow_up\" @click=\"action.shift(-1)\" />\n        <btn icon=\"keyboard_arrow_down\" @click=\"action.shift(1)\" />\n      </div>\n      <ConfirmButton v-if=\"remove\" @confirm=\"action.remove\" />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport ConfirmButton from \"@/components/ConfirmButton.vue\";\nimport { defineComponent, toRaw, computed, watch, nextTick } from \"vue\";\n\nexport default defineComponent({\n  name: \"ArrayControl\",\n  components: { ConfirmButton },\n  props: {\n    modelValue: { type: Array, default: () => undefined },\n    item: { type: Object, default: undefined },\n    add: {\n      type: [Number, String, Object, Function],\n      default: undefined,\n    },\n    copy: Boolean,\n    shift: Boolean,\n    remove: Boolean,\n  },\n  emits: [\"update:modelValue\", \"update:item\"],\n  setup(props, { emit }) {\n    const array = computed({\n      get: () => props.modelValue,\n      set: (i) => emit(\"update:modelValue\", i),\n    });\n    watch(array, last, { immediate: true });\n    function last() {\n      emit(\n        \"update:item\",\n        array.value ? array.value[array.value.length - 1] : undefined\n      );\n    }\n    async function add() {\n      let item: unknown = props.add;\n      if (!item === undefined) return;\n      if (!array.value) {\n        array.value = [];\n        await nextTick();\n      }\n      item =\n        typeof item === \"function\"\n          ? item()\n          : typeof item === \"object\"\n          ? JSON.parse(JSON.stringify(item))\n          : item;\n      array.value.push(item);\n      last();\n    }\n    function copy() {\n      const copy = JSON.parse(JSON.stringify(toRaw(props.item)));\n      array.value.push(copy);\n      last();\n    }\n    function shift(shift: number) {\n      const length = array.value.length;\n      const item = props.item;\n      const from = array.value.indexOf(toRaw(item));\n      const to = (from + shift + length) % length;\n      array.value.splice(from, 1);\n      array.value.splice(to, 0, item);\n    }\n    function remove() {\n      const index = array.value.indexOf(toRaw(props.item));\n      array.value.splice(index, 1);\n      last();\n    }\n    return { array, action: { add, copy, shift, remove } };\n  },\n});\n</script>\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","\nimport ConfirmButton from \"@/components/ConfirmButton.vue\";\nimport { defineComponent, toRaw, computed, watch, nextTick } from \"vue\";\n\nexport default defineComponent({\n  name: \"ArrayControl\",\n  components: { ConfirmButton },\n  props: {\n    modelValue: { type: Array, default: () => undefined },\n    item: { type: Object, default: undefined },\n    add: {\n      type: [Number, String, Object, Function],\n      default: undefined,\n    },\n    copy: Boolean,\n    shift: Boolean,\n    remove: Boolean,\n  },\n  emits: [\"update:modelValue\", \"update:item\"],\n  setup(props, { emit }) {\n    const array = computed({\n      get: () => props.modelValue,\n      set: (i) => emit(\"update:modelValue\", i),\n    });\n    watch(array, last, { immediate: true });\n    function last() {\n      emit(\n        \"update:item\",\n        array.value ? array.value[array.value.length - 1] : undefined\n      );\n    }\n    async function add() {\n      let item: unknown = props.add;\n      if (!item === undefined) return;\n      if (!array.value) {\n        array.value = [];\n        await nextTick();\n      }\n      item =\n        typeof item === \"function\"\n          ? item()\n          : typeof item === \"object\"\n          ? JSON.parse(JSON.stringify(item))\n          : item;\n      array.value.push(item);\n      last();\n    }\n    function copy() {\n      const copy = JSON.parse(JSON.stringify(toRaw(props.item)));\n      array.value.push(copy);\n      last();\n    }\n    function shift(shift: number) {\n      const length = array.value.length;\n      const item = props.item;\n      const from = array.value.indexOf(toRaw(item));\n      const to = (from + shift + length) % length;\n      array.value.splice(from, 1);\n      array.value.splice(to, 0, item);\n    }\n    function remove() {\n      const index = array.value.indexOf(toRaw(props.item));\n      array.value.splice(index, 1);\n      last();\n    }\n    return { array, action: { add, copy, shift, remove } };\n  },\n});\n","import { render } from \"./ArrayControl.vue?vue&type=template&id=b0c70f92\"\nimport script from \"./ArrayControl.vue?vue&type=script&lang=ts\"\nexport * from \"./ArrayControl.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./EditorCard.vue?vue&type=style&index=0&id=03976a61&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ConditionsEditor.vue?vue&type=style&index=0&id=6cb03aac&lang=scss&scoped=true\""],"sourceRoot":""}