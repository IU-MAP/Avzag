{"version":3,"sources":["webpack:///./src/Phonology/TableEntry.vue?4e68","webpack:///./src/Phonology/PhonemeUse.vue?b9a6","webpack:///./src/components/Query/InputQuery.vue","webpack:///./src/components/Query/InputQuery.vue?c7be","webpack:///./src/components/Query/InputQuery.vue?ce18","webpack:///./src/Phonology/index.vue?339c","webpack:///./src/Phonology/Table.vue?bbee","webpack:///./src/Phonology/TableEntry.vue","webpack:///./src/Phonology/TableEntry.vue?31a9","webpack:///./src/Phonology/TableEntry.vue?2a36","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./src/Phonology/index.vue","webpack:///./src/components/Query/ToggleQuery.vue","webpack:///./src/components/Query/ToggleQuery.vue?a9c2","webpack:///./src/components/Query/ToggleQuery.vue?c797","webpack:///./src/Phonology/Table.vue","webpack:///./src/Phonology/Table.vue?7761","webpack:///./src/Phonology/Table.vue?3f41","webpack:///./src/Phonology/PhonemeUse.vue","webpack:///./src/Phonology/PhonemeUse.vue?0382","webpack:///./src/Phonology/PhonemeUse.vue?6f43","webpack:///./src/Phonology/main.ts","webpack:///./src/Phonology/index.vue?31c1","webpack:///./src/Phonology/index.vue?f2d6","webpack:///./node_modules/core-js/modules/es.object.from-entries.js","webpack:///./src/components/Query/types.ts","webpack:///./src/components/Query/InputQuery.vue?9507"],"names":["input","placeholder","type","props","modelValue","Object","default","undefined","String","emits","setup","emit","query","get","set","q","value","toLowerCase","split","filter","s","reduce","t","substr","render","__scopeId","class","faded","selected","str","ipa","Boolean","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","phonemes","lectQuery","labels","lects","featureQuery","categories","c","phoneme","feature-query","lect-query","tags","u","l","lect","use","visible","icon","text","highlights","toggle","Array","label","length","fromEntries","entries","map","flag","defaultQuery","immediate","id","narrow","filtered","p","i","fitting","graphemes","components","TableEntry","includes","keys","singleLect","single","samples","grapheme","g","fullSamples","play","playable","notes","words","ipas","Notes","lectRoot","Set","delete","word","urls","replaceAll","n","highlight","target","index","forEach","fetch","method","then","ok","registry","collectTags","phomene","collected","primary","secondary","collectPhonemes","allUses","name","uses","values","sort","a","b","initialize","ToggleQuery","InputQuery","Table","PhonemeUse","$","iterate","createProperty","stat","iterable","k","v","AS_ENTRIES","EvaluateQuery","failEmpty","tag"],"mappings":"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","file":"js/chunk-41432b02.c73df7cc.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TableEntry.vue?vue&type=style&index=0&id=143c97ea&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PhonemeUse.vue?vue&type=style&index=0&id=5b71e50b&lang=scss&scoped=true\"","<template>\n  <input v-model=\"input\" :placeholder=\"placeholder\" type=\"text\" />\n</template>\n\n<script lang=\"ts\">\nimport { ref, PropType, computed, watchEffect, defineComponent } from \"vue\";\nimport { Query } from \"./types\";\n\nexport default defineComponent({\n  props: {\n    modelValue: { type: Object as PropType<Query>, default: undefined },\n    placeholder: { type: String, default: \"\" },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const input = ref(\"\");\n    const query = computed({\n      get: () => props.modelValue,\n      set: (q) => emit(\"update:modelValue\", q),\n    });\n\n    watchEffect(\n      () =>\n        (query.value = input.value\n          .toLowerCase()\n          .split(\" \")\n          .filter((s) => s)\n          .reduce((q, t) => {\n            if (t[0] === \"-\") q[t.substr(1)] = false;\n            else q[t] = true;\n            return q;\n          }, {} as Query))\n    );\n\n    return { input };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\ninput {\n  width: 350px;\n}\n@media only screen and (max-width: $mobile-width) {\n  input {\n    width: 100%;\n  }\n}\n</style>\n","\nimport { ref, PropType, computed, watchEffect, defineComponent } from \"vue\";\nimport { Query } from \"./types\";\n\nexport default defineComponent({\n  props: {\n    modelValue: { type: Object as PropType<Query>, default: undefined },\n    placeholder: { type: String, default: \"\" },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const input = ref(\"\");\n    const query = computed({\n      get: () => props.modelValue,\n      set: (q) => emit(\"update:modelValue\", q),\n    });\n\n    watchEffect(\n      () =>\n        (query.value = input.value\n          .toLowerCase()\n          .split(\" \")\n          .filter((s) => s)\n          .reduce((q, t) => {\n            if (t[0] === \"-\") q[t.substr(1)] = false;\n            else q[t] = true;\n            return q;\n          }, {} as Query))\n    );\n\n    return { input };\n  },\n});\n","import { render } from \"./InputQuery.vue?vue&type=template&id=3ae1a95e&scoped=true\"\nimport script from \"./InputQuery.vue?vue&type=script&lang=ts\"\nexport * from \"./InputQuery.vue?vue&type=script&lang=ts\"\n\nimport \"./InputQuery.vue?vue&type=style&index=0&id=3ae1a95e&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-3ae1a95e\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=2853883f&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Table.vue?vue&type=style&index=0&id=449b557c&lang=scss&scoped=true\"","<template>\n  <button :class=\"{ 'text-faded': faded, highlight: selected }\" class=\"col-0\">\n    <b>{{ str }}</b>\n    <span class=\"text-ipa\" :class=\"{ 'text-faded': str }\">{{ ipa }}</span>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    selected: Boolean,\n    faded: Boolean,\n    ipa: { type: String, default: \"\" },\n    str: { type: String, default: \"\" },\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n  place-content: center;\n  width: 46px;\n  height: 40px;\n  &.highlight,\n  &:not(.highlight):hover {\n    &,\n    * {\n      opacity: 1 !important;\n    }\n  }\n  &.text-faded {\n    background-color: transparent !important;\n  }\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  props: {\n    selected: Boolean,\n    faded: Boolean,\n    ipa: { type: String, default: \"\" },\n    str: { type: String, default: \"\" },\n  },\n});\n","import { render } from \"./TableEntry.vue?vue&type=template&id=143c97ea&scoped=true\"\nimport script from \"./TableEntry.vue?vue&type=script&lang=ts\"\nexport * from \"./TableEntry.vue?vue&type=script&lang=ts\"\n\nimport \"./TableEntry.vue?vue&type=style&index=0&id=143c97ea&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-143c97ea\"\n\nexport default script","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","<template>\n  <div v-if=\"phonemes\" class=\"section\">\n    <div class=\"col-1 scroll\">\n      <ToggleQuery v-model=\"lectQuery\" :labels=\"lects\" />\n      <InputQuery\n        v-model=\"featureQuery\"\n        placeholder=\"Query phonemes, e.g. voiced -velar...\"\n      />\n      <div v-for=\"c in categories\" :key=\"c\" class=\"col\">\n        <h2>{{ c + \"s\" }}</h2>\n        <Table\n          v-model=\"phoneme\"\n          :filter=\"c\"\n          :feature-query=\"featureQuery\"\n          :lect-query=\"lectQuery\"\n          :phonemes=\"phonemes\"\n        />\n      </div>\n    </div>\n    <div v-if=\"phoneme\" class=\"col-1\">\n      <div class=\"card col-1\">\n        <h1 class=\"text-ipa\">{{ phoneme.ipa }}</h1>\n        <p class=\"text-caption text-faded text-spaced\">{{ phoneme.tags }}</p>\n      </div>\n      <PhonemeUse v-for=\"(u, l) of phoneme.lects\" :key=\"l\" :lect=\"l\" :use=\"u\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport ToggleQuery from \"@/components/Query/ToggleQuery.vue\";\nimport InputQuery from \"@/components/Query/InputQuery.vue\";\nimport Table from \"./Table.vue\";\nimport PhonemeUse from \"./PhonemeUse.vue\";\n\nimport { ref, defineComponent } from \"vue\";\nimport { initialize, lects, phonemes, phoneme } from \"./main\";\n\nexport default defineComponent({\n  components: { ToggleQuery, InputQuery, Table, PhonemeUse },\n  setup() {\n    initialize();\n\n    const categories = [\"vowel\", \"consonant\"];\n    const lectQuery = ref({});\n    const featureQuery = ref({});\n\n    return {\n      phonemes,\n      phoneme,\n      lects,\n      categories,\n      lectQuery,\n      featureQuery,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.section {\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 224px;\n  gap: map-get($margins, \"double\");\n}\n@media only screen and (max-width: $mobile-width) {\n  .section {\n    grid-template-columns: 100%;\n  }\n}\n</style>\n","<template>\n  <div v-if=\"visible\" class=\"row scroll small\">\n    <btn class=\"round\" icon=\"clear\" @click=\"query = {}\" />\n    <btn\n      v-for=\"l in labels\"\n      :key=\"l\"\n      :text=\"l\"\n      class=\"round\"\n      :class=\"highlights[l]\"\n      @click=\"toggle(l)\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { PropType, computed, watch, defineComponent } from \"vue\";\nimport { Query } from \"./types\";\n\nexport default defineComponent({\n  props: {\n    modelValue: { type: Object as PropType<Query>, default: undefined },\n    labels: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const query = computed({\n      get: () => props.modelValue,\n      set: (q) => emit(\"update:modelValue\", q),\n    });\n    function toggle(label: string) {\n      if (label in query.value)\n        if (query.value[label]) query.value[label] = false;\n        else delete query.value[label];\n      else query.value[label] = true;\n    }\n\n    const visible = computed(() => props.labels.length > 1);\n    const highlights = computed(() =>\n      Object.fromEntries(\n        Object.entries(query.value).map(([label, flag]) => [\n          label,\n          flag ? \"highlight-confirm\" : \"highlight-alert\",\n        ])\n      )\n    );\n\n    const defaultQuery = computed(() => {\n      if (props.labels.length === 1) return { [props.labels[0]]: true };\n      return {};\n    });\n    watch(\n      () => props.labels,\n      () => (query.value = defaultQuery.value),\n      { immediate: true }\n    );\n\n    return { query, highlights, visible, toggle };\n  },\n});\n</script>\n","\nimport { PropType, computed, watch, defineComponent } from \"vue\";\nimport { Query } from \"./types\";\n\nexport default defineComponent({\n  props: {\n    modelValue: { type: Object as PropType<Query>, default: undefined },\n    labels: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const query = computed({\n      get: () => props.modelValue,\n      set: (q) => emit(\"update:modelValue\", q),\n    });\n    function toggle(label: string) {\n      if (label in query.value)\n        if (query.value[label]) query.value[label] = false;\n        else delete query.value[label];\n      else query.value[label] = true;\n    }\n\n    const visible = computed(() => props.labels.length > 1);\n    const highlights = computed(() =>\n      Object.fromEntries(\n        Object.entries(query.value).map(([label, flag]) => [\n          label,\n          flag ? \"highlight-confirm\" : \"highlight-alert\",\n        ])\n      )\n    );\n\n    const defaultQuery = computed(() => {\n      if (props.labels.length === 1) return { [props.labels[0]]: true };\n      return {};\n    });\n    watch(\n      () => props.labels,\n      () => (query.value = defaultQuery.value),\n      { immediate: true }\n    );\n\n    return { query, highlights, visible, toggle };\n  },\n});\n","import { render } from \"./ToggleQuery.vue?vue&type=template&id=920f4396\"\nimport script from \"./ToggleQuery.vue?vue&type=script&lang=ts\"\nexport * from \"./ToggleQuery.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div id=\"root\" :class=\"{ narrow }\" class=\"row scroll wrap\">\n    <TableEntry\n      v-for=\"(p, i) in filtered\"\n      :key=\"i\"\n      :faded=\"!fitting[i]\"\n      :ipa=\"p.ipa\"\n      :str=\"graphemes[i]\"\n      :selected=\"selected == p\"\n      @click=\"selected = p\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, PropType, defineComponent } from \"vue\";\nimport TableEntry from \"./TableEntry.vue\";\nimport { Query, EvaluateQuery } from \"@/components/Query/types\";\nimport { Phoneme } from \"./types\";\n\nexport default defineComponent({\n  components: { TableEntry },\n  props: {\n    modelValue: { type: Object as PropType<Phoneme>, default: undefined },\n    phonemes: { type: Array as PropType<Phoneme[]>, default: () => [] },\n    filter: { type: String, default: \"\" },\n    lectQuery: { type: Object as PropType<Query>, default: \"\" },\n    featureQuery: { type: Object as PropType<Query>, default: \"\" },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const selected = computed({\n      get: () => props.modelValue,\n      set: (s) => emit(\"update:modelValue\", s),\n    });\n    const filtered = computed(() =>\n      props.filter\n        ? props.phonemes.filter(({ tags }) => tags?.includes(props.filter))\n        : props.phonemes\n    );\n    const fitting = computed(() =>\n      filtered.value.map(\n        ({ lects, tags }) =>\n          EvaluateQuery(Object.keys(lects), props.lectQuery) &&\n          EvaluateQuery(tags as string, props.featureQuery)\n      )\n    );\n    const singleLect = computed(() => {\n      let single = \"\";\n      for (const [lect, flag] of Object.entries(props.lectQuery))\n        if (flag)\n          if (!single) single = lect;\n          else break;\n      return single;\n    });\n    const graphemes = computed(() =>\n      singleLect.value\n        ? filtered.value.map(\n            ({ lects }) => lects[singleLect.value]?.samples?.[0]?.grapheme\n          )\n        : []\n    );\n    const narrow = computed(() => filtered.value.length <= 12);\n\n    return { narrow, graphemes, fitting, selected, filtered };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/_panels\";\n$item-width: 46px;\n$item-height: 40px;\n\n#root > * {\n  width: $item-width;\n  height: $item-height;\n}\n\n@media only screen and (max-width: $mobile-width) {\n  #root {\n    flex-direction: column;\n    place-content: flex-start;\n    max-height: 5 * $item-height;\n\n    &.narrow {\n      max-height: 1.5 * $item-height;\n    }\n  }\n}\n</style>\n","\nimport { computed, PropType, defineComponent } from \"vue\";\nimport TableEntry from \"./TableEntry.vue\";\nimport { Query, EvaluateQuery } from \"@/components/Query/types\";\nimport { Phoneme } from \"./types\";\n\nexport default defineComponent({\n  components: { TableEntry },\n  props: {\n    modelValue: { type: Object as PropType<Phoneme>, default: undefined },\n    phonemes: { type: Array as PropType<Phoneme[]>, default: () => [] },\n    filter: { type: String, default: \"\" },\n    lectQuery: { type: Object as PropType<Query>, default: \"\" },\n    featureQuery: { type: Object as PropType<Query>, default: \"\" },\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const selected = computed({\n      get: () => props.modelValue,\n      set: (s) => emit(\"update:modelValue\", s),\n    });\n    const filtered = computed(() =>\n      props.filter\n        ? props.phonemes.filter(({ tags }) => tags?.includes(props.filter))\n        : props.phonemes\n    );\n    const fitting = computed(() =>\n      filtered.value.map(\n        ({ lects, tags }) =>\n          EvaluateQuery(Object.keys(lects), props.lectQuery) &&\n          EvaluateQuery(tags as string, props.featureQuery)\n      )\n    );\n    const singleLect = computed(() => {\n      let single = \"\";\n      for (const [lect, flag] of Object.entries(props.lectQuery))\n        if (flag)\n          if (!single) single = lect;\n          else break;\n      return single;\n    });\n    const graphemes = computed(() =>\n      singleLect.value\n        ? filtered.value.map(\n            ({ lects }) => lects[singleLect.value]?.samples?.[0]?.grapheme\n          )\n        : []\n    );\n    const narrow = computed(() => filtered.value.length <= 12);\n\n    return { narrow, graphemes, fitting, selected, filtered };\n  },\n});\n","import { render } from \"./Table.vue?vue&type=template&id=449b557c&scoped=true\"\nimport script from \"./Table.vue?vue&type=script&lang=ts\"\nexport * from \"./Table.vue?vue&type=script&lang=ts\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=449b557c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-449b557c\"\n\nexport default script","<template>\n  <div class=\"col-1 card small\">\n    <div class=\"title\">\n      <h2 class=\"flex\">{{ lect }}</h2>\n      <p v-for=\"g in graphemes\" :key=\"g\" class=\"text-dot\">{{ g }}</p>\n    </div>\n    <div class=\"col-0\">\n      <button\n        v-for=\"(s, i) in fullSamples\"\n        :key=\"i\"\n        class=\"row\"\n        @click=\"play(i)\"\n      >\n        <span class=\"icon\">\n          {{ playable[i] ? \"play_arrow\" : \"arrow_right\" }}\n        </span>\n        <Notes class=\"word\" :notes=\"[words[i]]\" />\n        <Notes :notes=\"[ipas[i]]\" />\n      </button>\n    </div>\n    <Notes class=\"text-caption\" :notes=\"use.notes\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Notes from \"@/components/Notes/index.vue\";\nimport { computed, defineComponent, ref, watch, PropType } from \"vue\";\nimport { root } from \"@/store\";\nimport { PhonemeUse } from \"./types\";\nimport * as player from \"@/audio-player\";\n\nexport default defineComponent({\n  components: { Notes },\n  props: {\n    lect: { type: String, default: \"\" },\n    use: { type: Object as PropType<PhonemeUse>, default: () => ({}) },\n  },\n  setup(props) {\n    const lectRoot = computed(() => root + props.lect + \"/audio/\");\n    const graphemes = computed(() => {\n      const set = new Set(props.use.samples?.map(({ grapheme }) => grapheme));\n      set.delete(undefined);\n      return set;\n    });\n    const fullSamples = computed(() =>\n      props.use.samples?.filter(({ word, ipa }) => word || ipa)\n    );\n    const urls = computed(() =>\n      fullSamples.value\n        ?.map(({ word, ipa }) => word?.replaceAll(\"*\", \"\") ?? ipa)\n        .map((n) => lectRoot.value + n + \".mp3\")\n    );\n\n    function highlight(text: string, target: string) {\n      return text.includes(\"*\") ? text : text.replaceAll(target, `*${target}*`);\n    }\n    const words = computed(() =>\n      fullSamples.value?.map(({ word, grapheme }) =>\n        highlight(word ?? \"\", grapheme ?? \"\")\n      )\n    );\n    const ipas = computed(() =>\n      fullSamples.value?.map(({ ipa }) =>\n        highlight(ipa ?? \"\", props.use.phoneme)\n      )\n    );\n\n    const playable = ref([] as boolean[]);\n    function play(index: number) {\n      if (playable.value[index] && urls.value)\n        player.play(props.lect, urls.value[index]);\n    }\n    watch(\n      urls,\n      (urls) => {\n        if (!urls) return;\n        playable.value = new Array(urls.length);\n        urls.forEach((u, i) =>\n          fetch(u, { method: \"HEAD\" }).then(\n            ({ ok }) => (playable.value[i] = ok)\n          )\n        );\n      },\n      { immediate: true }\n    );\n\n    return {\n      play,\n      playable,\n      ipas,\n      words,\n      fullSamples,\n      graphemes,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.title {\n  display: flex;\n  justify-content: space-between;\n}\n.col-0 {\n  $margin: -1 * map-get($margins, \"normal\");\n  margin-left: $margin;\n  margin-right: $margin;\n  border-radius: 0;\n  &:last-child {\n    margin-bottom: $margin;\n    border-radius: 0 0 $border-radius $border-radius;\n  }\n}\n.word {\n  flex: 1;\n  text-align: left;\n}\n</style>\n","\nimport Notes from \"@/components/Notes/index.vue\";\nimport { computed, defineComponent, ref, watch, PropType } from \"vue\";\nimport { root } from \"@/store\";\nimport { PhonemeUse } from \"./types\";\nimport * as player from \"@/audio-player\";\n\nexport default defineComponent({\n  components: { Notes },\n  props: {\n    lect: { type: String, default: \"\" },\n    use: { type: Object as PropType<PhonemeUse>, default: () => ({}) },\n  },\n  setup(props) {\n    const lectRoot = computed(() => root + props.lect + \"/audio/\");\n    const graphemes = computed(() => {\n      const set = new Set(props.use.samples?.map(({ grapheme }) => grapheme));\n      set.delete(undefined);\n      return set;\n    });\n    const fullSamples = computed(() =>\n      props.use.samples?.filter(({ word, ipa }) => word || ipa)\n    );\n    const urls = computed(() =>\n      fullSamples.value\n        ?.map(({ word, ipa }) => word?.replaceAll(\"*\", \"\") ?? ipa)\n        .map((n) => lectRoot.value + n + \".mp3\")\n    );\n\n    function highlight(text: string, target: string) {\n      return text.includes(\"*\") ? text : text.replaceAll(target, `*${target}*`);\n    }\n    const words = computed(() =>\n      fullSamples.value?.map(({ word, grapheme }) =>\n        highlight(word ?? \"\", grapheme ?? \"\")\n      )\n    );\n    const ipas = computed(() =>\n      fullSamples.value?.map(({ ipa }) =>\n        highlight(ipa ?? \"\", props.use.phoneme)\n      )\n    );\n\n    const playable = ref([] as boolean[]);\n    function play(index: number) {\n      if (playable.value[index] && urls.value)\n        player.play(props.lect, urls.value[index]);\n    }\n    watch(\n      urls,\n      (urls) => {\n        if (!urls) return;\n        playable.value = new Array(urls.length);\n        urls.forEach((u, i) =>\n          fetch(u, { method: \"HEAD\" }).then(\n            ({ ok }) => (playable.value[i] = ok)\n          )\n        );\n      },\n      { immediate: true }\n    );\n\n    return {\n      play,\n      playable,\n      ipas,\n      words,\n      fullSamples,\n      graphemes,\n    };\n  },\n});\n","import { render } from \"./PhonemeUse.vue?vue&type=template&id=5b71e50b&scoped=true\"\nimport script from \"./PhonemeUse.vue?vue&type=script&lang=ts\"\nexport * from \"./PhonemeUse.vue?vue&type=script&lang=ts\"\n\nimport \"./PhonemeUse.vue?vue&type=style&index=0&id=5b71e50b&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-5b71e50b\"\n\nexport default script","import { getInitializer, loadJSON, loadLectsJSON } from \"@/store\";\nimport { ref, shallowRef } from \"vue\";\nimport { IPARegistry, Phoneme, PhonemeUse } from \"./types\";\n\nlet registry: IPARegistry;\n\nexport const lects = ref<string[]>([]);\nexport const phonemes = shallowRef<Phoneme[]>();\nexport const phoneme = shallowRef<Phoneme>();\n\nfunction collectTags(phomene: string) {\n  let collected = \"\";\n  for (const { ipa, tags } of registry.primary) {\n    if (phomene.includes(ipa)) {\n      collected += tags;\n      break;\n    }\n  }\n  for (const { ipa, tags } of registry.secondary) {\n    if (phomene.includes(ipa)) {\n      collected += \" \" + tags;\n    }\n  }\n  return collected;\n}\n\nfunction collectPhonemes(allUses: Record<string, PhonemeUse[]>) {\n  const registry = {} as Record<string, Phoneme>;\n\n  for (const name in allUses) {\n    const uses = allUses[name];\n    if (!uses) continue;\n\n    uses.forEach((use) => {\n      const phoneme = use.phoneme;\n      if (!(phoneme in registry)) {\n        registry[phoneme] = {\n          ipa: phoneme,\n          tags: collectTags(phoneme),\n          lects: {},\n        };\n      }\n      registry[phoneme].lects[name] = use;\n    });\n  }\n\n  phonemes.value = Object.values(registry);\n  phonemes.value.sort(({ ipa: a }, { ipa: b }) => (a > b ? 1 : b > a ? -1 : 0));\n  phoneme.value = phonemes.value[0];\n}\n\nexport const initialize = getInitializer(async () => {\n  registry = await loadJSON(\"ipa\");\n  const phonemes = await loadLectsJSON<PhonemeUse[]>(\"phonology\");\n  lects.value = Object.keys(phonemes);\n  collectPhonemes(phonemes);\n});\n","\nimport ToggleQuery from \"@/components/Query/ToggleQuery.vue\";\nimport InputQuery from \"@/components/Query/InputQuery.vue\";\nimport Table from \"./Table.vue\";\nimport PhonemeUse from \"./PhonemeUse.vue\";\n\nimport { ref, defineComponent } from \"vue\";\nimport { initialize, lects, phonemes, phoneme } from \"./main\";\n\nexport default defineComponent({\n  components: { ToggleQuery, InputQuery, Table, PhonemeUse },\n  setup() {\n    initialize();\n\n    const categories = [\"vowel\", \"consonant\"];\n    const lectQuery = ref({});\n    const featureQuery = ref({});\n\n    return {\n      phonemes,\n      phoneme,\n      lects,\n      categories,\n      lectQuery,\n      featureQuery,\n    };\n  },\n});\n","import { render } from \"./index.vue?vue&type=template&id=2853883f&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=2853883f&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-2853883f\"\n\nexport default script","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, { AS_ENTRIES: true });\n    return obj;\n  }\n});\n","export type Query = Record<string, boolean>;\n\nexport function EvaluateQuery(\n  tags: string[] | string,\n  query: Query,\n  failEmpty = false\n) {\n  if (!query) return true;\n  const entries = Object.entries(query);\n  if (failEmpty && !entries.length) return false;\n\n  for (const [tag, flag] of entries) {\n    if (flag !== tags.includes(tag)) return false;\n  }\n  return true;\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InputQuery.vue?vue&type=style&index=0&id=3ae1a95e&lang=scss&scoped=true\""],"sourceRoot":""}